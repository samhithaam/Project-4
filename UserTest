package projectTest;

import com.project04.Student;
import com.project04.Teacher;

import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Objects;
import java.util.Scanner;

// TODO: Handle exceptions. Before adding anything to ArrayList, make sure it's not null.
class UserProfile {
    String userId;
    String passWord;

    public UserProfile(String userId, String passWord) {
        this.userId = userId;
        this.passWord = passWord;
    }

    public String getUserId() {
        return userId;
    }

    public String getPassWord() {
        return passWord;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        UserProfile that = (UserProfile) o;
        return userId.equals(that.userId) && passWord.equals(that.passWord);
    }

    @Override
    public int hashCode() {
        return Objects.hash(userId, passWord);
    }

    @Override
    public String toString() {
        return "UserProfile{" +
                "userId='" + userId + '\'' +
                ", passWord='" + passWord + '\'' +
                '}';
    }
}

public class User {
    private static final int STUDENT = 1;
    private static final int TEACHER = 2;

    private static ArrayList<UserProfile> studentUsernames = new ArrayList<>();
    private static ArrayList<UserProfile> teacherUsernames = new ArrayList<>();

    private int getStudentOrTeacher(Scanner scanner) {
        boolean validInput = false;
        int teacherOrStudent = 0;
        do {
            System.out.println("Are you a student or a teacher? Enter (1) for student and (2) for teacher.");
            try {
                teacherOrStudent = Integer.parseInt(scanner.nextLine());

            } catch (Exception e) {
                System.out.println("Invalid input..please enter numbers 1 or 2..Retry..");
            }
            if (teacherOrStudent == STUDENT || teacherOrStudent == TEACHER) {
                validInput = true;
            }
        } while (!validInput);
        return teacherOrStudent;
    }

    public void createAccount(Scanner scan) {

        int teacherOrStudent = getStudentOrTeacher(scan);

        if (teacherOrStudent == STUDENT) {
            boolean userIDLoopControl = false;
            String user;
            do {
                userIDLoopControl = false;
                System.out.print("Enter a username: ");
                user = scan.nextLine();
                if (studentUsernames != null && studentUsernames.size() > 0) {
                    for (UserProfile userProfile : studentUsernames) {
                        if (userProfile.getUserId().equals(user)) {
                            System.out.println("\nUsername already exists, please try again.");
                            userIDLoopControl = true;
                            break;
                        }
                    }
                } else {
                    System.out.println("\nNo student user ID exists. Creating...");
                    break;
                }
            } while (userIDLoopControl);

            System.out.print("\nEnter a password: ");
            String pass = scan.nextLine();
            UserProfile userProfile = new UserProfile(user, pass);
            studentUsernames.add(userProfile);

            System.out.println("\nYou have successfully created a Student account!");

        } else if (teacherOrStudent == TEACHER) {
            boolean userIDLoopControl = false;
            String user;
            do {
                userIDLoopControl = false;
                System.out.print("Enter a username: ");
                user = scan.nextLine();
                if (teacherUsernames != null && teacherUsernames.size() > 0) {
                    for (UserProfile userProfile : teacherUsernames) {
                        if (userProfile.getUserId().equals(user)) {
                            System.out.println("\nUsername already exists, please try again.");
                            userIDLoopControl = true;
                            break;
                        }
                    }
                } else {
                    System.out.println("\nNo teacher user ID exists. Creating...");
                    break;
                }
            } while (userIDLoopControl);

            System.out.print("\nEnter a password: ");
            String pass = scan.nextLine();
            UserProfile userProfile = new UserProfile(user, pass);
            teacherUsernames.add(userProfile);

            System.out.println("\nYou have successfully created a teacher account!");
        }
    }

    public boolean editAccount(Scanner scan) {
        int teacherOrStudent = getStudentOrTeacher(scan);

        if (teacherOrStudent == STUDENT) {
            if (studentUsernames == null || studentUsernames.isEmpty()) {
                System.out.println("No student accounts exist. Cannot edit");
                return false;
            }
            System.out.println("Enter student username: ");
            String user = scan.nextLine();
            System.out.println("Enter student password: ");
            String password = scan.nextLine();

            UserProfile userProfile = new UserProfile(user, password);
            if (studentUsernames.contains(userProfile)) {
                System.out.println("Student account exists. Enter new details to modify. ");
                System.out.println("Enter new student username: ");
                String newUser = scan.nextLine();
                System.out.println("Enter new student password: ");
                String newPassword = scan.nextLine();
                UserProfile userProfile1 = new UserProfile(newUser, newPassword);
                if (studentUsernames.contains(userProfile1)) {
                    System.out.println(" Account details exists. Cannot modify. Please try again..");
                    return false;
                } else {
                    System.out.println("Student account [" + user + "] is being modified");
                    studentUsernames.remove(userProfile);
                    studentUsernames.add(userProfile1);
                    System.out.println("Student account [" + newUser + "] modified successfully");
                    return true;
                }
            } else {
                System.out.println("Student account/password combination " + user + "does not match. Cannot modify!!");
                return false;
            }
        } else if (teacherOrStudent == TEACHER) {
            if (teacherUsernames == null || teacherUsernames.isEmpty()) {
                System.out.println("No teacher accounts exist. Cannot edit");
                return false;
            }
            System.out.println("Enter teacher username: ");
            String user = scan.nextLine();
            System.out.println("Enter teacher password: ");
            String password = scan.nextLine();

            UserProfile userProfile = new UserProfile(user, password);
            if (teacherUsernames.contains(userProfile)) {
                System.out.println("Teacher account exists. Enter new details to modify. ");
                System.out.println("Enter new teacher username: ");
                String newUser = scan.nextLine();
                System.out.println("Enter new teacher password: ");
                String newPassword = scan.nextLine();
                UserProfile userProfile1 = new UserProfile(newUser, newPassword);
                if (teacherUsernames.contains(userProfile1)) {
                    System.out.println("Account details exists. Cannot modify. Please try again..");
                    return false;
                } else {
                    System.out.println("Teacher account [" + user + "] is being modified");
                    teacherUsernames.remove(userProfile);
                    teacherUsernames.add(userProfile1);
                    System.out.println("Teacher account [" + newUser + "] modified successfully");
                    return true;
                }
            } else {
                System.out.println("Teacher account/password combination [" + user + "] does not match. Cannot modify!!");
                return false;
            }
        }
        return false;
    }

    public boolean deleteAccount(Scanner scan) {
        int teacherOrStudent = getStudentOrTeacher(scan);

        if (teacherOrStudent == STUDENT) {

            if (studentUsernames == null || studentUsernames.isEmpty()) {
                System.out.println("No student accounts exist. Cannot delete");
                return false;
            }
            System.out.println("Enter student username: ");
            String user = scan.nextLine();
            System.out.println("Enter student password: ");
            String password = scan.nextLine();

            UserProfile userProfile = new UserProfile(user, password);
            if (studentUsernames.contains(userProfile)) {
                System.out.println("Student account " + user + "being removed");
                studentUsernames.remove(userProfile);
                System.out.println("Student account " + user + "removed successfully");
                return true;
            } else {
                System.out.println("Student account/password combination " + user + "does not match. Cannot delete!!");
                return false;
            }
        } else if (teacherOrStudent == TEACHER) {
            if (teacherUsernames == null || teacherUsernames.isEmpty()) {
                System.out.println("No teacher accounts exist. Cannot delete");
                return false;
            }
            System.out.println("Enter teacher username: ");
            String user = scan.nextLine();
            System.out.println("Enter teacher password: ");
            String password = scan.nextLine();

            UserProfile userProfile = new UserProfile(user, password);
            if (teacherUsernames.contains(userProfile)) {
                System.out.println("Teacher account [" + user + "] is being removed");
                teacherUsernames.remove(userProfile);
                System.out.println("Teacher account [" + user + "] removed successfully");
                return true;
            } else {
                System.out.println("Teacher account/password combination [" + user + "] does not match. Cannot delete!!");
                return false;
            }
        }
        return false;
    }

    public void printAllUsers() {
        System.out.println("TEACHERS: \n\n" + Arrays.toString(teacherUsernames.toArray()));
        System.out.println("STUDENT: \n\n" + Arrays.toString(studentUsernames.toArray()));
    }

    public boolean signIn(Scanner scan) {
        int teacherOrStudent = getStudentOrTeacher(scan);

        if (teacherOrStudent == STUDENT) {

            if (studentUsernames == null || studentUsernames.isEmpty()) {
                System.out.println("No student accounts exist. Cannot delete");
                return false;
            }
            System.out.println("Enter student username: ");
            String user = scan.nextLine();
            System.out.println("Enter student password: ");
            String password = scan.nextLine();

            UserProfile userProfile = new UserProfile(user, password);
            if (studentUsernames.contains(userProfile)) {
                System.out.println("Student account [" + user + "] signed in!");
                return true;
            } else {
                System.out.println("Student account/password combination for [" + user + "] does not match. Cannot sign in!!");
                return false;
            }
        } else if (teacherOrStudent == TEACHER) {
            if (teacherUsernames == null || teacherUsernames.isEmpty()) {
                System.out.println("No teacher accounts exist. Cannot delete");
                return false;
            }
            System.out.println("Enter teacher username: ");
            String user = scan.nextLine();
            System.out.println("Enter teacher password: ");
            String password = scan.nextLine();

            UserProfile userProfile = new UserProfile(user, password);
            if (teacherUsernames.contains(userProfile)) {
                System.out.println("Teacher account [" + user + "] signed in!");
                return true;
            } else {
                System.out.println("Teacher account/password combination for [" + user + "] does not match. Cannot sign in!!");
                return false;
            }
        }
        return false;
    }

    private boolean writeFile(ArrayList<UserProfile> list, String fileName) throws Exception {
        System.out.println("Writing profiles to file " + fileName);
        try (PrintWriter pw = new PrintWriter(new FileWriter(fileName))) {
            for (UserProfile line : list) {
                String entries = String.format("%s,%s", line.getUserId(), line.getPassWord());
                pw.println(entries);
            }
            pw.flush();
            return true;
        } catch (IOException e) {
            e.printStackTrace();
            throw e;
        }
    }

    public void writeUserFiles() throws Exception {
        writeFile(studentUsernames, "src/StudentUsernames.txt");
        writeFile(teacherUsernames, "src/TeacherUsernames.txt");
    }


    public ArrayList<UserProfile> readFile(String fileName) {
        ArrayList<UserProfile> fileContents = new ArrayList<>();
        File file = new File(fileName);
        if (!file.exists()) {
            return fileContents;
        }
        System.out.println("File : " + fileName + "exists. Loading profiles.. ");
        try (BufferedReader bfr = new BufferedReader(new FileReader(fileName))) {
            String line = new String("");
            while ((line = bfr.readLine()) != null) {
                UserProfile userProfile;
                String[] tokens = line.split(",");
                if (tokens != null && tokens.length == 2) {
                    userProfile = new UserProfile(tokens[0], tokens[1]);
                    fileContents.add(userProfile);
                }
            }

            System.out.println("Loading profiles completed.. ");

            return fileContents;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    public void readUserFiles() {
        studentUsernames = readFile("src/StudentUsernames.txt");
        teacherUsernames = readFile("src/TeacherUsernames.txt");
    }

    public static void main(String[] args) throws Exception {
        User user = new User();
        user.readUserFiles();

        Scanner scan = new Scanner(System.in);
        System.out.println("What would you like to do? \n1. Create an account \n2. Edit an account" +
                "\n3. Delete an account\n4. Sign in\n5. Exit.");
        int choice = scan.nextInt();
        scan.nextLine();

        do {
            if (choice == 1) {
                user.createAccount(scan);
            } else if (choice == 2) {
                user.editAccount(scan);
            } else if (choice == 3) {
                user.deleteAccount(scan);
            } else if (choice == 4) {
                user.signIn(scan);
            } else if (choice == 5) {
                break;
            } else {
                System.out.println("Input was invalid. Please try again!");
            }

            user.printAllUsers();

            System.out.println("What would you like to do? \n1. Create an account \n2. Edit an account" +
                    "\n3. Delete an account\n4. Sign in\n5. Exit.");
            choice = scan.nextInt();
            scan.nextLine();
        } while (true);
        user.writeUserFiles();
    }
}
